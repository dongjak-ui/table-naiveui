import {defineConfig} from "vite";
import vue from '@vitejs/plugin-vue';
import path from "path";
import UnoCSS from 'unocss/vite'
import AutoImport from 'unplugin-auto-import/vite';
import Components from 'unplugin-vue-components/vite';
import { NaiveUiResolver } from 'unplugin-vue-components/resolvers';
import dts from 'vite-plugin-dts'
export default defineConfig({
    plugins: [
        dts({ rollupTypes: true }),
        vue(),
        UnoCSS(),
        AutoImport({
            imports: ['vue'],
            dts: 'src/typings/auto-imports.d.ts',
            vueTemplate: true,
        }),
        Components({
            dts: 'src/typings/components.d.ts',
            resolvers: [
                NaiveUiResolver(),
            ]
        }),
    ],
    build: {
        lib: {
            entry: path.resolve(__dirname, 'index.ts'),
            name: "table-naiveui",
            formats: ['es', 'umd'], // adding 'umd' requires globals set to every external module
            fileName: (format) => `table-naiveui.${format}.js`,
        },
        rollupOptions: {
            // 预依赖(peerDependencies)的模块不要打包到库中
            external: ['vue','naive-ui','@vueuse/core' ,/primevue\/.+/], // not every external has a global
            output: {
                // disable warning on src/index.ts using both default and named export
                exports: 'named',
                // Provide global variables to use in the UMD build
                // for externalized deps (not useful if 'umd' is not in lib.formats)
                globals: {
                    vue: 'Vue',
                },
            },
        },
        emptyOutDir: false, // to retain the types folder generated by tsc
    },
});
